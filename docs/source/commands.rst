Команды 
=======

Основные команды
----------------

добавить текст
~~~~~~~~~~~~~~

Добавляет к результату строку текста.

Принимает любое количество аргументов со зданичениями, и булевый аргумент 'подробно'.

.. code-block:: python 
    
    добавить текст: текст="Текст 1", другой_текст="Текст 2"  # Текст 1 Текст 2
    
    добавить текст: не_знаю="123", ещё_чёт="алё", подробно  # не_знаю:  123 ещё_чёт:  алё

добавить изображение
~~~~~~~~~~~~~~~~~~~~

Добавляет к результату изображение.

Принимает аргумент 'изображение' в формате изображения.

.. code-block:: python 
    
    добавить изображение: изображение=переменная_с_изображением
    
    добавить изображение: изображение=изображения[0]

добавить элемент
~~~~~~~~~~~~~~~~

Добавляет элемент в конец списка.

Принимает аргумент 'список', в который нужно добавить, и аргумент 'элемент', который надо добавить.

.. code-block:: python 
    
    наш_список = ["Привет список!", "Ещё элемент"]
    добавить элемент: список=наш_список, элемент=123
    добавить текст: текст=наш_список # ['Привет список!', 'Ещё элемент', 123]
    
убрать элемент
~~~~~~~~~~~~~~

Убирает элемент из списока, по его содержимому.

Принимает аргумент 'список', и аргумент 'элемент' - элеменент, который надо удалить.

.. code-block:: python 
    
    наш_список = ["Привет список!", "Ещё элемент"]
    убрать элемент: список=наш_список, элемент="Ещё элемент"
    добавить текст: текст=наш_список # ['Привет список!']
    
удалить элемент
~~~~~~~~~~~~~~~

Удаляет элемент из списока, по его индексу.

Принимает аргумент 'список', в который нужно добавить, и аргумент 'номер' - номер элемента который надо удалить.

.. code-block:: python 
    
    наш_список = ["Привет список!", "Ещё элемент"]
    удалить элемент: список=наш_список, номер=0
    добавить текст: текст=наш_список # ['Ещё элемент']

расширить список
~~~~~~~~~~~~~~~~

Расширяет список, элементами из другого списка.

Принимает аргумент 'список', в который нужно добавить, и аргумент 'элементы' - другой список, или кортеж, элементами из которого дополнить список.

.. code-block:: python 
    
    наш_список = ["Привет список!", "Ещё элемент"]
    расширить список: список=наш_список, элементы=["Гадюка", 1]
    добавить текст: текст=наш_список # ['Привет список!', 'Ещё элемент', 'Гадюка', 1]
    
удалить ключ
~~~~~~~~~~~~

Удаляет ключ из словаря.

Принимает аргумент 'словарь', из которого удалить элемент по ключу, и аргумент 'ключ' - ключ, который удалить.

.. code-block:: python 
    
    наш_словарь= {"Алё": "Я не знаю", "Нет имени": 2}
    удалить ключ: словарь=наш_словарь, ключ="Алё"
    добавить текст: текст=наш_словарь # {'Нет имени': 2}
    
    
Обработка изображений
---------------------

обрезать изображение
~~~~~~~~~~~~~~~~~~~~

Обрезает края изображения по пикселям.

Принимает аргумент 'изображение' в формате изображения.
- Принимает аргументы в формате числа (пиксели), относительно левого верхнего угла: левая_граница, правая_граница, верхняя_граница, нижняя_граница.

.. code-block:: python 
    
    обрезать изображение: изображение=переменная_с_изображением, левая_граница=10,  правая_граница=590,  верхняя_граница=10,  нижняя_граница=590

сжать изображение
~~~~~~~~~~~~~~~~~

Уменьшает размер изображения в несколько раз.

Принимает аргумент 'изображение' в формате изображения и аргумент 'коэффициент', восколько раз уменьшить изображение

.. code-block:: python 
    
    сжать изображение: изображение=переменная_с_изображением, коэффициент=2 # Уменьшит изображеине в раза

повернуть изображение
~~~~~~~~~~~~~~~~~~~~~

Поворачивает изображение против часовой стрелки.

Принимает аргумент 'изображение' в формате изображения и аргумент 'поворот', на сколько градусов повернуть изображение

.. code-block:: python 
    
    повернуть изображение: изображение=переменная_с_изображением, поворот=90

отразить изображение
~~~~~~~~~~~~~~~~~~~~

Отражает изображение по вертикали или горизонтали.

Принимает аргумент 'изображение' в формате изображения и 2 необязательных булевых аргумента: по_горизонтали, по_вертикали

.. code-block:: python 
    
    отразить изображение: изображение=переменная_с_изображением, по_вертикали
    
    отразить изображение: изображение=переменная_с_изображением, по_горизонтали, по_вертикали
    
наложить эффект
~~~~~~~~~~~~~~~

Накладывает эффект на изображение.

Принимает аргумент 'изображение' в формате изображения и необязательные булевые аргументы: блюр, выпуклость, серость, границы 

.. code-block:: python 
    
    наложить эффект: изображение=переменная_с_изображением, границы
    
    наложить эффект: изображение=переменная_с_изображением, блюр, выпуклость, серость, границы

Наложение объектов
------------------

наложить текст
~~~~~~~~~~~~~~

Накладывает текст на изображение.

Принимает аргументы:
- 'куда' - на какое изображение наложить текст

- 'где' - координаты верхнего, левого угла текста в виде доли от размера изображения

- 'текст' - содержание текста

- 'цвет' - необязательный аргумент, цвет текста, по умолчанию чёрный

.. code-block:: python 
   
    наложить текст: куда=переменная_с_изображением, где=(0.5, 0.5), текст="Привет Мир!", цвет=зелёный

наложить картинку
~~~~~~~~~~~~~~~~~

Накладывает изображение на изображение.

Принимает аргументы:
- 'куда' - на какое изображение наложить изображение

- 'где' - координаты верхнего, левого угла изображения в виде доли от размера изображения

- 'какую' - какое изображение наложить

.. code-block:: python 
   
    наложить картинку: куда=переменная_с_изображением, где=по_центру, какую=друое_изображение

наложить линию
~~~~~~~~~~~~~~

Накладывает линию на изображение.

Принимает аргументы:
- 'куда' - на какое изображение наложить изображение

- 'точки' - координаты точек линии, в списка списков координат доли от размера изображения

- 'цвет' - необязательный аргумент, цвет линии, по умолчанию чёрный

- 'ширина' - необязательный аргумент, ширина линни, в пикселях, по умолчанию 2

.. code-block:: python 
   
    наложить линию: куда=переменная_с_изображением, точки=(левый_верхний_угол, (0.3, 0.3)), ширина=5

наложить многоугольник
~~~~~~~~~~~~~~~~~~~~~~

Накладывает многоугольник на изображение.

Принимает аргументы:
- 'куда' - на какое изображение наложить изображение

- 'углы' - координаты углов многоугольника, в списка списков координат доли от размера изображения

- 'ширина_обводки' - необязательный аргумент, ширина обводки, в пикселях, по умолчанию 2

- 'цвет' (цвет заливки) и 'обводка' (цвет обводки) - необязательные, если ни указ не один - то чёрная обводка и нет заливки. Если указан только 1 - то другой аргумент прозрачный.

.. code-block:: python 
   
    наложить многоугольник: куда=переменная_с_изображением, углы=(левый_верхний_угол, (0.3, 0.3), правый_верхний_угол), цвет=красный

наложить прямоугольник
~~~~~~~~~~~~~~~~~~~~~~

Накладывает прямоугольник на изображение.

Принимает аргументы:
- 'куда' - на какое изображение наложить изображение

- 'где' - координаты верхнего, левого угла прямоугольника в виде доли от размера изображения

- 'ширина' и 'высота' прямоугольника в виде доли от размера изображения, относительно верхнего левого угла.

- 'ширина_обводки' - необязательный аргумент, ширина обводки, в пикселях, по умолчанию 2

- 'цвет' (цвет заливки) и 'обводка' (цвет обводки) - необязательные, если ни указ не один - то чёрная обводка и нет заливки. Если указан только 1 - то другой аргумент прозрачный.

.. code-block:: python 
   
    наложить прямоугольник: куда=переменная_с_изображением, где=(0.5, 0.5), ширина=0.3, высота=0.4, обводка=зелёный, ширина_обводки=10
    
наложить круг
~~~~~~~~~~~~~

Накладывает прямоугольник на изображение.

Принимает аргументы:
- 'куда' - на какое изображение наложить изображение

- 'центр' - координаты центра круга в виде доли от размера изображения

- 'радиус' - радиус круга, в виде доли от размера изображения

- 'ширина_обводки' - необязательный аргумент, ширина обводки, в пикселях, по умолчанию 2

- 'цвет' (цвет заливки) и 'обводка' (цвет обводки) - необязательные, если ни указ не один - то чёрная обводка и нет заливки. Если указан только 1 - то другой аргумент прозрачный.

.. code-block:: python 
   
    наложить прямоугольник: куда=переменная_с_изображением, где=(0.5, 0.5), ширина=0.3, высота=0.4, обводка=зелёный, ширина_обводки=10
