Встроенные функции
==================

копия
~~~~~

Создаёт независимую копию объекта

.. code-block:: python 

    новое_изображение = копия(старое_изображение)
    
    новый_список = копия(старый_список)

диапазон
~~~~~~~~

Работает также, как и range в Python

Первый элемент включительно, последний невключительно.

.. code-block:: python 

    от_1_до_100_каждый_3 = диапазон(1, 100, 3) 
    
    от_700_до_3 = диапазон(700, 3, -1) 

модуль
~~~~~~

Модуль от числа

.. code-block:: python 

    модуль_17 = модуль(17) # 17
    
    модуль_120 = модуль(-1.20) # 1.20

корень
~~~~~~

корень от числа

.. code-block:: python 

    результат = корень(16) # 4
    
    результат = корень(25) # 5

округлить
~~~~~~~~~

округляет число

.. code-block:: python 

    результат = округлить(3.3) # 3
    
    результат = округлить(25.8) # 26

все
~~~

Все элементы списка верны

.. code-block:: python 

    все_верно = все([Верно, строка(1) == "1"]) # Верно
    
    не_все_верно = все((1 == 3, Верно)) # Неверно
 
любой
~~~~~

Любой из элементов списка верен

.. code-block:: python 

    все_верно = любой([Верно, Неверно]) # Верно
    
    не_все_верно = любой((1 == 3, Неверно)) # Неверно
    
пронумеровать
~~~~~~~~~~~~~

Пронумеровывает любой список, или кортеж

.. code-block:: python 

    пронумерованный_список = пронумеровать(["Привет Мир!", "Это просто пример"]) # [(0, "Привет Мир!"), (1, "Это просто пример")]
    
длина
~~~~~

Находит длину списка, кортежа, множества, строки и т.д.

.. code-block:: python 

    пронумерованный_список = длина(["Привет Мир!", 1, (Верно, 0.1)]) # 3

сумма
~~~~~

Переводит сумму элементов списка

.. code-block:: python 

    результат = сумма([3, 10, -1]) # 12
   
число
~~~~~

Переводит объект в число

.. code-block:: python 

    результат = число(3.3) # 3
    
    результат = число("5") # 5

строка
~~~~~~

Переводит объект в строку

.. code-block:: python 

    результат = строка(3.3) # "3.3"
    
    результат = строка(("123", 123)) # "("123", 123)"
  
список
~~~~~~

Переводит объект в список

.. code-block:: python 

    результат = список("Привет!") # ["П", "р", "и", "в", "е", "т", "!"]

кортеж
~~~~~~

Переводит объект в кортеж

.. code-block:: python 

    результат = кортеж("Привет!") # ("П", "р", "и", "в", "е", "т", "!")

множество
~~~~~~~~~

Переводит объект в множество

.. code-block:: python 

    результат = множество("Как?") # {"К", "а", "к", "?"}

наибольшее
~~~~~~~~~~

Находит наибольшее значение списка

.. code-block:: python 

    результат = наибольшее([4, 1, 2, 10, -200, 1000]) # 1000

наименьшее
~~~~~~~~~~

Находит наименьшее значение списка

.. code-block:: python 

    результат = наименьшее([4, 1, 2, 10, -200, 1000]) # -200
    
отсортировать
~~~~~~~~~~~~~

Сортирует список от меньшего к большему

.. code-block:: python 

    результат = отсортировать([4, 1, 2, 10, -200, 1000]) # [-200, 1, 2, 4, 10, 1000]

случайное_число
~~~~~~~~~~~~~~~

Генерирует случайное число от 1 аргумента до 2

.. code-block:: python 

    результат = случайное_число(1, 10) # каждый раз случайное число от 1 до 10 включительно

случайный_элемент
~~~~~~~~~~~~~~~~~

Выбирает случайный_элемент из заданного списка

.. code-block:: python 

    результат = случайный_элемент([4, 1, 2, 10, -200, 1000]) # каждый раз случайный элемент из заданного списка
    
тип
~~~

Возвращает строку с типом 

.. code-block:: python 

    результат = тип(1) # Число
    
    результат = тип([1, 2, 4]) # Список

разделить_строку
~~~~~~~~~~~~~~~~

Разделяет строку на список

Первый аргумент сама строка. Второй аргумент необязательный, это разделитель, по умолчанию пробел.

.. code-block:: python 

    результат = разделить_строку("Привет Мир!") # ["Привет", "Мир!"]
    
    результат = разделить_строку("Привет Мир!", разделитель="ет") # ["Прив", " Мир!"]

все_элементы
~~~~~~~~~~~~

Соединяет все элементы списка

Первый аргумент список. Второй аргумент необязательный, это соединитель, по умолчанию пробел.

.. code-block:: python 

    результат = все_элементы(["Привет Мир!", "Ещё раз привет Мир!"]) # "Привет Мир! Ещё раз привет Мир!"
    
    результат = все_элементы(["Привет Мир!", "Ещё раз привет Мир!"], соединитель=" -= ") # "Привет Мир! -= Ещё раз привет Мир!"
