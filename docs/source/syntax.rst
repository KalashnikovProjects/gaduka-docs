Синтаксис
=========

.. admonition:: Внимание!
   :class: important

   Эта документация расчитана на разработчиков, знающих Python.
   
   Если вы не знаете Python, или новичок в Гадюке, советуем начать с изучения курса.


В данной главе синтаксис Гадюки будет сравниваться с синтаксисом Python.

Комментарии
~~~~~~~~~~~

Коментарии, как и Python, начинаются с #

.. code-block:: python 

    # Комментарий
    # И это тоже

Арифметические операторы
~~~~~~~~~~~~~~~~~~~~~~~~

Все арифметические операторы совпадают с операторами из Python 3.7

.. code-block:: python 

    a + b    a * b    a ** b    a % b
    a - b    a / b    a // b    (a + b) / 2

Переменные
~~~~~~~~~~
Присвоение значений переменной работает также, как и в Python

.. code-block:: python 

    a = b
    a += b
    a **= b
    a[1] = b
    a, b = b, a
    
Логические операторы
~~~~~~~~~~~~~~~~~~~~
Логические операторы работают также, как и в Python, но называются на русском

.. code-block:: python 

    или - or
    и - and
    в - in
    не - not
    
Условные конструкции
~~~~~~~~~~~~~~~~~~~~
В Гадюке существует условные конструкции if, elif, else

Код на Гадюке

.. code-block:: python 

    если a % 2 == 0:
        заглушка
    иначе если b == 1 и a == 1:
        заглушка
    иначе:
        заглушка
        
Аналогичный код на Python

.. code-block:: python 

    if a % 2 == 0:
        pass
    elif b == 1 and a == 1:
        pass
    else:
        pass
    
Циклы
~~~~~
В Гадюке существует есть 2 типа циклов: for и while, они работают также, как и на Python

Код на Гадюке

.. code-block:: python 
    
    a = 10
    b = 3
    пока a > 1:
        a /= 2
        
        повтор b раз:
            печать(номер_повтора)
        
Аналогичный код на Python

.. code-block:: python 

    a = 10
    b = 3
    while a > 1:
        a /= 2
        
        for номер_повтора in range(b):
            print(номер_повтора)

Перенос строки
~~~~~~~~~~~~~~
Перенос строки осуществляется с помощью знака тире "-", он ставится в конце и в начале строки

.. code-block:: python 
    
    пе- 
      -чать("Привет, Мир!")

   
    печать("Прив-
       -ет, Мир!")
